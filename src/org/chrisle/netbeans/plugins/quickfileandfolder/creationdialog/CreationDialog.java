package org.chrisle.netbeans.plugins.quickfileandfolder.creationdialog;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import org.chrisle.netbeans.plugins.quickfileandfolder.QuickFolderAction;
import org.openide.filesystems.FileObject;
import org.openide.loaders.DataObject;

/**
 *
 * @author chrl
 */
public class CreationDialog extends javax.swing.JDialog {
    private DataObject _context;    
    
    /**
     * Creates new form CreationDialog
     */
    public CreationDialog() {
//        super(parent, modal);
               
        initComponents();
        
        this._errorLabel.setVisible(false);
        
        _newCreationTextField.addKeyListener(new KeyListener() {
            @Override
            public void keyPressed(KeyEvent e) {
                System.out.println(_newCreationTextField.getText());
                
                if (dirExists(_newCreationTextField.getText())) {
                    _errorLabel.setVisible(true);
                    _createButton.setEnabled(false);
                } else {
                    _errorLabel.setVisible(false);
                    _createButton.setEnabled(true);
                }
            }
            
            @Override
            public void keyReleased(KeyEvent e) {
                
            }

            @Override
            public void keyTyped(KeyEvent e) {
                
            }
        });
    }
    
    public boolean dirExists(String dirName) {
        FileObject primaryFile;
        
        primaryFile = _context.getPrimaryFile();
        
        Path path = Paths.get(primaryFile.getPath() + "/" + dirName);
        
        return Files.exists(path);
    }
    
    public void setLabel(String label) {
        this._newCreationLabel.setText(label);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        _newCreationTextField = new javax.swing.JTextField();
        _newCreationLabel = new javax.swing.JLabel();
        _createButton = new javax.swing.JButton();
        _cancelButton = new javax.swing.JButton();
        _errorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        _newCreationTextField.setText(org.openide.util.NbBundle.getMessage(CreationDialog.class, "CreationDialog._newCreationTextField.text")); // NOI18N
        _newCreationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                _newCreationTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(_newCreationLabel, org.openide.util.NbBundle.getMessage(CreationDialog.class, "CreationDialog._newCreationLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(_createButton, org.openide.util.NbBundle.getMessage(CreationDialog.class, "CreationDialog._createButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(_cancelButton, org.openide.util.NbBundle.getMessage(CreationDialog.class, "CreationDialog._cancelButton.text")); // NOI18N

        _errorLabel.setForeground(new java.awt.Color(255, 0, 51));
        org.openide.awt.Mnemonics.setLocalizedText(_errorLabel, org.openide.util.NbBundle.getMessage(CreationDialog.class, "CreationDialog._errorLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(_createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(_errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(_newCreationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(_newCreationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(_newCreationTextField)
                    .addComponent(_newCreationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_createButton)
                    .addComponent(_cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void _newCreationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event__newCreationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event__newCreationTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreationDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreationDialog dialog = new CreationDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton _cancelButton;
    private javax.swing.JButton _createButton;
    private javax.swing.JLabel _errorLabel;
    private javax.swing.JLabel _newCreationLabel;
    private javax.swing.JTextField _newCreationTextField;
    // End of variables declaration//GEN-END:variables

    public void setErrorLabelVisible(boolean setVisible) {
        this._errorLabel.setVisible(setVisible);
    }

    public void setContext(DataObject context) {
        this._context = context;
    }
}
